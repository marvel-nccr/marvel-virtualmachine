# configuration to run via tox

[tox]
envlist = vagrant

[testenv]
basepython = python3
skip_install = true

[testenv:vagrant]
description = Build a vagrant box VM then provision with ansible
deps = -rrequirements.txt
passenv =
    HOME
    ANSIBLE_ARGS
    VAGRANT_NO_GUI
    VAGRANT_ON_GH
whitelist_externals = vagrant
commands_pre =
    ansible-galaxy install -r requirements.yml
commands = vagrant {posargs:up}

[testenv:ansible]
description = Run ansible on an existing VM
deps = -rrequirements.txt
passenv =
    HOME
commands_pre =
    ansible-galaxy install -r requirements.yml
commands = ansible-playbook playbook-build.yml {posargs}
# to run against a specific host:
# tox -e ansible -- --extra-vars "build_hosts=aws"
# to clean build files:
# tox -e ansible -- --tags ubuntu_desktop,qm_customizations,simulationbase --extra-vars "clean=true"

[testenv:package]
description = Package a built Vagrant box for distribution
deps = -rrequirements.txt
passenv =
    HOME
commands =
    ansible-playbook playbook-package.yml {posargs}


[testenv:docs-{update,clean}]
description = 
    clean: Build the documentation (remove any existing build)
    update: Build the documentation (modify any existing build)
deps = -rrequirements-docs.txt
whitelist_externals = rm
commands =
    clean: rm -rf docs/_build
    sphinx-build -nW --keep-going -b {posargs:html} docs/ docs/_build/{posargs:html}

[testenv:docs-live]
description = Build the documentation and launch browser
deps = -rrequirements-docs.txt
commands =
    sphinx-autobuild \
        --re-ignore _build/.* \
        --port 0 --open-browser \
        -n -b {posargs:html} docs/ docs/_build/{posargs:html}
